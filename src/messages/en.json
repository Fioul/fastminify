{
  "common": {
    "subtitle": "Minify, Unminify & Beautify JavaScript, CSS & JSON Online",
    "description": "Minify, unminify and beautify your JavaScript, CSS and JSON code instantly — free, fast, and private. Online minification, unminification and beautification tool with no registration required.",
    "extendedDescription": "Optimize your website performance by reducing your file sizes by 30 to 70% on average. This advanced minification, unminification and beautification tool processes JavaScript, CSS and JSON in real-time, without compromising your data security. Perfect for developers, web agencies and businesses looking to improve their SEO and user experience.",
    "normalCode": "Normal Code",
    "minifiedCode": "Minified Code",
    "auto": "Auto",
    "minify": "Minify",
    "unminify": "Unminify",
    "serialize": "Serialize",
    "unserialize": "Unserialize",
    "concat": "Concat files",
    "clear": "Clear all",
    "clearLeft": "Clear left",
    "clearRight": "Clear right",
    "copy": "Copy",
    "download": "Download",
    "clearEditor": "Clear editor",
    "closeModal": "Close modal",
    "closeModalShort": "Close",
    "toggleTheme": "Toggle theme",
    "selectLanguage": "Select language",
    "noChange": "No change",
    "saved": "Saved",
    "added": "Added",
    "minificationResult": "Minification Result",
    "unminificationResult": "Unminification Result",
    "minifyCode": "Minify code",
    "unminifyCode": "Unminify code",
    "serializeCode": "Serialize code",
    "unserializeCode": "Unserialize code",
    "beautifyCode": "Beautify code",
    "beautify": "Beautify",
    "copyCode": "Copy code",
    "downloadCode": "Download code",
    "openInModal": "Open in modal",
    "editorModalDescription": "Full-screen code editor with copy, download and clear options",
    "copied": "Copied!",
    "selectFileType": "Select the type of files you want to concatenate",
    "concatenateFiles": "Concatenate Files",
    "fileType": "File Type",
    "dropFilesHere": "Drop files here or click to browse",
    "supportsFiles": "Supports: .{type} files",
    "selectFiles": "Select Files",
    "filesToConcatenate": "Files to Concatenate ({count})",
    "dragToReorder": "Drag to reorder",
    "addFileNamesAsComments": "Add file names as comments",
    "addFileNamesAsCommentsDesc": "Add file names as comments in the output",
    "addNewlinesBetweenFiles": "Add newlines between files",
    "addNewlinesBetweenFilesDesc": "Add blank lines between concatenated files",
    "processFiles": "Process Files",
    "processingFiles": "Processing files...",
    "concatenatingFiles": "Concatenating files...",
    "result": "Result",
    "downloadResult": "Download Result",
    "clearFiles": "Clear Files",
    "noFilesSelected": "No files selected",
    "addFilesToStart": "Add files to start",
    "errorProcessingFiles": "Error processing files. Please check your files and try again.",
    "options": "Options",
    "concatenateAndMinify": "Concatenate & Minify {count} file{plural}",
    "concatenateAndMinifySingle": "Concatenate & Minify {count} file",
    "useResult": "Use Result",
    "filesOrderHelp": "File order can be defined by drag and drop",
    "ariaLabels": {
      "selectOption": "Select option",
      "selectLanguage": "Select language",
      "selectFileType": "Select file type"
    },
    "toast": {
      "codeCopied": "Code copied to clipboard!",
      "allCleared": "All code cleared!",
      "leftCleared": "Left code cleared!",
      "rightCleared": "Right code cleared!",
      "codeDownloaded": "Code downloaded!",
      "leftCodeCopied": "Left code copied!",
      "leftCodeDownloaded": "Left code downloaded!",
      "rightCodeCopied": "Right code copied!",
      "rightCodeDownloaded": "Right code downloaded!",
      "pasteCodeFirst": "Please paste some code in the left editor first.",
      "pasteRightCodeFirst": "Please paste some code in the right editor first.",
      "enterCodeToBeautify": "Please enter some code to beautify.",
      "languageAutoDetected": "Language auto-detected: {language}",
      "minifiedSuccessfully": "Code minified successfully!",
      "unminifiedSuccessfully": "Code unminified successfully!",
      "beautifiedSuccessfully": "Code beautified successfully!",
      "minificationError": "An error occurred during minification.",
      "unminificationError": "An error occurred during unminification.",
      "beautificationError": "An error occurred during beautification.",
      "invalidJsonProperty": "Invalid JSON: Property names must be quoted. Try using double quotes around property names.",
      "invalidJsonToken": "Invalid JSON: Unexpected character found. Check for missing commas, quotes, or brackets.",
      "invalidJsonQuotes": "Invalid JSON: Property names must use double quotes, not single quotes.",
      "invalidJsonComma": "Invalid JSON: Missing comma or closing brace. Check your object structure.",
      "invalidJsonSyntax": "Invalid JSON syntax. Please check your JSON code and ensure it's properly formatted.",
      "invalidDataFormat": "Invalid data format. Please provide valid JSON data for PHP serialization.",
      "invalidCodeType": "Invalid {type} code. Please ensure the code matches the selected type.",
      "invalidCssSyntax": "Invalid CSS syntax. Please check your CSS code.",
      "invalidJsSyntax": "Invalid JavaScript syntax. Please check your JavaScript code.",
      "invalidPhpData": "Invalid data for PHP serialization. Please provide valid JSON data, not PHP code.",
      "invalidPhpSerialized": "Invalid PHP serialized data. Please provide valid PHP serialized string for unserialization.",
      "minificationFailed": "Minification failed: {error}",
      "unminificationFailed": "Unminification failed: {error}",
      "beautificationFailed": "Beautification failed: {error}"
    }
  },
  "languages": {
    "javascript": "JavaScript",
    "css": "CSS",
    "json": "JSON",
    "php": "PHP Serialize"
  },
  "placeholders": {
    "normalCode": "Paste your normal code here...",
    "minifiedCode": "Paste your minified code here..."
  },
  "tooltips": {
    "autoDetect": "Automatically detect the programming language when you paste or type code"
  },
  "navigation": {
    "home": "Code Minifier",
    "about": "About",
    "documentation": "Documentation",
    "contact": "Contact"
  },
  "about": {
    "title": "About FastMinify",
    "subtitle": "The fastest, most reliable online tool to minify, unminify and beautify JavaScript, CSS and JSON",
    "technologies": {
      "title": "Technologies used",
      "subtitle": "FastMinify is built with the most modern and performant web technologies",
      "nextjs": {
        "title": "Next.js 15",
        "description": "React framework with App Router, Server Components and SEO optimizations"
      },
      "terser": {
        "title": "Terser",
        "description": "High-performance and optimized JavaScript minification engine"
      },
      "csso": {
        "title": "CSSO",
        "description": "Advanced CSS optimizer with intelligent compression and syntax analysis"
      },
      "monaco": {
        "title": "Monaco Editor",
        "description": "Professional code editor with syntax highlighting and autocompletion"
      },
      "typescript": {
        "title": "TypeScript",
        "description": "Static typing for better security and code maintainability"
      },
      "tailwind": {
        "title": "Tailwind CSS",
        "description": "Utility-first CSS framework for responsive and performant design"
      }
    },
    "process": {
      "title": "Conversion process",
      "subtitle": "Discover how FastMinify intelligently and securely transforms your code",
      "analysis": {
        "title": "Code analysis",
        "description": "The code is analyzed client-side to identify syntax, possible optimizations and data structures"
      },
      "optimization": {
        "title": "Intelligent optimization",
        "description": "Application of advanced compression algorithms according to code type and selected options"
      },
      "compression": {
        "title": "Final compression",
        "description": "Generation of optimized code with preserved functionality and statistics display"
      }
    },
    "algorithms": {
      "title": "Minification algorithms",
      "subtitle": "Each code type uses specialized algorithms for optimal compression",
      "javascript": {
        "title": "JavaScript",
        "optimizations": [
          "Remove spaces and comments",
          "Minify variable names",
          "Optimize expressions",
          "Eliminate dead code",
          "Compress character strings"
        ]
      },
      "css": {
        "title": "CSS",
        "optimizations": [
          "Remove unnecessary spaces",
          "Convert colors (blue → #0000ff)",
          "Merge identical rules",
          "Optimize selectors",
          "Remove redundant properties"
        ]
      }
    },
    "performance": {
      "title": "Performance and security",
      "subtitle": "FastMinify guarantees optimal performance and maximum security for your data",
      "speed": {
        "title": "Processing speed",
        "description": "Instant client-side processing without network latency, even for large files"
      },
      "security": {
        "title": "Total privacy",
        "description": "No data is sent to our servers. All processing is done locally in your browser"
      },
      "reliability": {
        "title": "Guaranteed reliability",
        "description": "Tested and proven algorithms, with guaranteed preservation of original code functionality"
      }
    },
    "opensource": {
      "title": "Transparency and open source",
      "subtitle": "FastMinify is completely transparent and open source to guarantee your trust",
      "transparency": {
        "title": "Total transparency",
        "items": [
          "Completely transparent source code",
          "Open minification algorithms",
          "Public security audit",
          "Encouraged community contribution"
        ]
      },
      "updates": {
        "title": "Continuous evolution",
        "items": [
          "Regular updates",
          "Free new features",
          "Support for latest web standards",
          "Continuous performance improvements"
        ]
      }
    }
  },
  "contact": {
    "title": "Contact Us",
    "subtitle": "Found a bug? Have a suggestion? I'd love to hear from you!",
    "sendMessage": "Contact us",
    "name": "Name",
    "email": "Email",
    "typeOfMessage": "Type of message",
    "subject": "Subject",
    "message": "Message",
    "sendButton": "Send Message",
    "getInTouch": "Get in touch",
    "getInTouchText": "I'm constantly improving FastMinify. Whether you've found a bug, have a feature request, or just want to say hello, I'd love to hear from you.",
    "commonIssues": "Common issues",
    "minificationNotWorking": "Minification not working?",
    "minificationNotWorkingText": "Make sure your code is valid JavaScript or CSS. Check the browser console for errors.",
    "codeNotCopying": "Code not copying?",
    "codeNotCopyingText": "Try using the copy button or manually select and copy the text.",
    "themeNotSaving": "Theme not saving?",
    "themeNotSavingText": "Check if your browser allows localStorage. Try refreshing the page.",
    "messageTypes": {
      "contact": "Contact Request",
      "feedback": "Feedback",
      "improvement": "Improvement Idea",
      "bug": "Bug Report"
    },
    "placeholders": {
      "name": "Your name",
      "email": "your@email.com",
      "subject": "Brief description",
      "message": "Please describe your issue or suggestion in detail..."
    },
    "validation": {
      "required": "Please fill in all required fields.",
      "success": "Thank you for your message! I'll get back to you soon.",
      "error": "An error occurred while sending the message."
    },
    "form": {
      "description": "Fill out the form below and I'll get back to you quickly.",
      "selectTypePlaceholder": "Select a message type",
      "sending": "Sending..."
    }
  },
  "footer": {
    "description": "Free online tool to minify code instantly — fast, modern, and privacy-friendly.",
    "product": {
      "title": "Product",
      "home": "Home",
      "about": "About",
      "features": "Features"
    },
    "legal": {
      "title": "Legal",
      "privacy": "Privacy Policy",
      "legal": "Legal Notice",
      "cookies": "Manage Cookies",
      "robots": "Robots.txt"
    },
    "copyright": "All rights reserved.",
    "support": {
      "title": "Support",
      "contact": "Contact",
      "issues": "Report Bug",
      "github": "Source Code"
    },
    "rights": "All rights reserved.",
    "hosting": "Hosted on"
  },
    "content": {
      "introduction": {
        "title": "Why is minification essential?",
        "performance": {
          "title": "Performance Impact",
          "description": "Minification significantly reduces your file sizes, speeding up your web page loading. A 30-70% reduction in file size translates to faster loading times and better user experience."
        },
        "seo": {
          "title": "SEO and Economic Benefits",
          "description": "Search engines favor fast sites. Minification improves your SEO ranking while reducing bandwidth consumption, generating substantial savings on your hosting costs."
        }
      },
      "hero": {
        "badges": {
          "free": "100% Free",
          "private": "No data sent",
          "instant": "Instant processing"
        }
      },
    "whyMinify": {
      "title": "What is JavaScript and CSS code minification?",
      "subtitle": "JavaScript and CSS code minification is the process of removing unnecessary characters from source code without changing its functionality. This includes whitespace, comments, and shortening variable names to optimize web performance.",
      "detailedExplanation": "In modern web development, every millisecond counts. Minification transforms your readable code into an optimized version that loads faster, consumes less bandwidth, and improves user experience. It's an essential practice for high-traffic sites, web applications, and e-commerce projects where performance directly impacts conversions.",
      "benefits": {
        "performance": {
          "title": "File size reduction",
          "description": "Minification can reduce JavaScript and CSS file sizes by 30-70%, significantly improving page load times. This optimization is particularly crucial for mobile sites and slow connections, where every kilobyte saved matters."
        },
        "bandwidth": {
          "title": "Bandwidth optimization",
          "description": "Smaller files mean less data transfer, reducing bandwidth costs and improving user experience on slower connections. For a site with 10,000 daily visitors, this can represent substantial hosting cost savings."
        },
        "security": {
          "title": "Code obfuscation",
          "description": "Minified code is harder to read and reverse-engineer, providing a basic level of code protection. While not absolute security, it discourages attempts at copying or malicious modification."
        }
      }
    },
    "languages": {
      "title": "Supported languages",
      "javascript": "JavaScript",
      "css": "CSS",
      "json": "JSON",
      "php": "PHP Serialization"
    },
    "howItWorks": {
      "title": "How does it work?",
      "subtitle": "Our minification tool is designed to be simple, fast and secure.",
      "steps": {
        "paste": {
          "title": "Paste your code",
          "description": "Copy and paste your code into the left editor. Our automatic detection recognizes the language."
        },
        "configure": {
          "title": "Configure options",
          "description": "Customize minification according to your needs: compatibility, compression, optimizations."
        },
        "getResult": {
          "title": "Get the result",
          "description": "Your minified code appears instantly. Download or copy the result."
        }
      }
    },
    "seoOptimization": {
      "title": "SEO and Performance Optimization",
      "subtitle": "Code minification directly improves your search engine ranking and your site's user experience.",
      "seoImpact": {
        "title": "SEO Impact",
        "items": [
          "Improves Google's <strong>Core Web Vitals</strong>",
          "Reduces page <strong>loading times</strong>",
          "Increases <strong>conversion rates</strong>",
          "Improves <strong>mobile experience</strong>"
        ]
      },
      "technicalOptimizations": {
        "title": "Technical optimizations",
        "items": [
          "Removes <strong>unnecessary spaces</strong>",
          "Shortens <strong>variable names</strong>",
          "Optimizes <strong>expressions</strong>",
          "<strong>GZIP</strong> compression compatible"
        ]
      }
    },
    "faq": {
      "title": "Frequently Asked Questions",
      "subtitle": "Find answers to the most common questions about code minification.",
      "questions": [
        {
          "question": "Does minification break my code?",
          "answer": "No, minification only changes the code presentation (spaces, comments, variable names) without altering its functionality. Your code works exactly the same way."
        },
        {
          "question": "Can I unminify minified code?",
          "answer": "Yes, this tool can unminify JavaScript and CSS minified code, although the result may not always be identical to the original code (comments and variable names are lost)."
        },
        {
          "question": "Is my data secure?",
          "answer": "Absolutely. All processing happens client-side in your browser. No data is sent to servers, ensuring complete privacy."
        },
        {
          "question": "What file types can I minify?",
          "answer": "This tool supports JavaScript, CSS and JSON for minification, as well as PHP serialization. Each file type has its own optimization options for maximum results."
        },
        {
          "question": "Does minification really improve performance?",
          "answer": "Yes, minification can reduce file sizes by 30 to 70%, resulting in faster loading times and better user experience."
        },
        {
          "question": "Is the tool really free?",
          "answer": "Yes, Fast Minify is 100% free and requires no registration. You can use it as much as you want without any limitations."
        }
      ]
    },
    "codeExamples": {
      "title": "Minification examples",
      "subtitle": "Discover how minification transforms your code to optimize performance.",
      "javascript": "JavaScript",
      "css": "CSS",
      "originalCode": "Original code:",
      "minifiedCode": "Minified code:"
    }
  },
  "privacy": {
    "title": "Privacy Policy",
    "description": "FastMinify Privacy Policy - How we handle your data",
    "lastUpdated": "Last updated: October 2025",
    "introduction": {
      "title": "Data Processing",
      "content": "FastMinify processes your code locally in your browser. No code is stored, collected, or transmitted to servers. This tool is designed to be completely private and secure."
    },
    "dataCollection": {
      "title": "What Is Collected",
      "content": "The site only collects anonymous usage data through:",
      "types": {
        "analytics": "Google Analytics (with your consent) - anonymous traffic statistics",
        "cookies": "Essential cookies for language preferences and functionality",
        "ads": "Advertising data via Google AdSense (no personal data collected)"
      }
    },
    "cookies": {
      "title": "Cookies",
      "content": "The site uses minimal cookies:",
      "types": {
        "title": "Cookie types:",
        "essential": "Essential cookies for site functionality (always active)",
        "analytics": "Google Analytics cookies (optional, requires consent)",
        "advertising": "Advertising cookies (no personal data)"
      },
      "retention": {
        "title": "Retention period:",
        "essential": "Essential cookies: session or 1 year maximum",
        "analytics": "Analytics cookies: 2 years maximum",
        "advertising": "Advertising cookies: 13 months maximum"
      }
    },
    "googleServices": {
      "title": "Third-Party Services",
      "content": "The site uses Google services:",
      "analytics": "Google Analytics: Anonymous traffic statistics (you can opt-out)",
      "adsense": "Google AdSense: Displays advertisements (no personal data collected)"
    },
    "dataRights": {
      "title": "Your Rights",
      "content": "Since we don't store personal data, you can:",
      "rights": {
        "optout": "Opt-out of Google Analytics at any time",
        "cookies": "Manage cookie preferences in your browser",
        "adblock": "Use ad-blockers if you prefer"
      }
    },
    "dataSecurity": {
      "title": "Security",
      "content": "Your code is processed entirely in your browser and never sent to our servers. No data is stored or transmitted."
    },
    "dataTransfers": {
      "title": "Data transfers outside the EU",
      "content": "Some of our third-party services may transfer data to countries located outside the European Union:",
      "transfers": {
        "google": "Google (Analytics, AdSense): United States",
        "purpose": "These transfers are necessary for the operation of our analytics and advertising services."
      },
      "safeguards": {
        "title": "Legal safeguards:",
        "adequacy": "European Commission adequacy decision regarding the United States",
        "contractual": "Standard contractual clauses approved by the European Commission",
        "certification": "Privacy Shield certification (if applicable)"
      },
      "rights": {
        "title": "Your rights:",
        "object": "You can object to these transfers by disabling analytics cookies",
        "information": "You can request information about the safeguards in place",
        "complaint": "You can lodge a complaint with the competent supervisory authority"
      }
    },
    "contact": {
      "title": "Questions",
      "content": "For questions about this privacy policy, please contact me through the website."
    },
    "footer": "This privacy policy may be updated. Check back periodically for changes."
  },
  "legal": {
    "title": "Legal Notice",
    "description": "FastMinify Legal Notice - Terms of use",
    "lastUpdated": "Last updated: October 2025",
    "service": {
      "title": "Service Description",
      "description": "FastMinify is a free online tool for minifying, beautifying, and optimizing JavaScript, CSS, JSON, and PHP code. All processing is done locally in your browser.",
      "features": {
        "minification": "JavaScript, CSS, and JSON code minification",
        "beautification": "Code beautification and formatting",
        "concatenation": "Multiple file concatenation",
        "phpSerialization": "PHP serialization and unserialization"
      }
    },
    "intellectualProperty": {
      "title": "Intellectual Property",
      "content": "The FastMinify website content is protected by copyright. Your code remains your property - we never store or claim rights to your code.",
      "warning": "Important: Your code is processed locally and never sent to our servers."
    },
    "liability": {
      "title": "Terms of Use",
      "content": "FastMinify is provided \"as is\" without warranty. We cannot guarantee:",
      "limitations": {
        "accuracy": "Perfect accuracy of minification results",
        "availability": "Continuous service availability",
        "damages": "Absence of damages from service use"
      }
    },
    "cookies": {
      "title": "Cookies",
      "content": "This site uses essential cookies for functionality and optional analytics cookies. You can manage preferences in your browser.",
      "moreInfo": "See our Privacy Policy for details."
    },
    "modifications": {
      "title": "Changes",
      "content": "We may update these terms at any time. Continued use constitutes acceptance of changes."
    },
    "footer": "Use of this service implies acceptance of these terms."
  },
  "notFound": {
    "title": "Oops! Page Not Found",
    "subtitle": "Looks like this page went on a coffee break! ☕",
    "description": "The page you're looking for seems to have vanished into the digital void. But don't worry, even the best code sometimes has bugs!",
    "suggestions": {
      "title": "Here's what you can do:",
      "items": [
        "Check the URL for typos (we all make mistakes!)",
        "Go back to the homepage and try again",
        "Use this awesome minifier while you're here",
        "Take a deep breath and try again"
      ]
    },
    "actions": {
      "home": "Back to Home",
      "minify": "Start Minifying"
    },
    "fun": {
      "quote": "404: The page you're looking for is in another castle! 🏰",
      "joke": "Why did the web page go to therapy? Because it had too many issues! 😄"
    }
  },
  "cookies": {
    "title": "Cookie Preferences",
    "description": "This site uses cookies to enhance your experience and analyze site usage. You can customize your preferences below.",
    "privacyPolicy": "Privacy Policy",
    "legalNotice": "Legal Notice",
    "acceptAll": "Accept All",
    "reject": "Reject",
    "customize": "Customize",
    "preferences": {
      "title": "Cookie Preferences",
      "cancel": "Cancel",
      "save": "Save Preferences",
      "necessary": {
        "title": "Necessary Cookies",
        "description": "Essential for the website to function properly. These cannot be disabled."
      },
      "analytics": {
        "title": "Analytics Cookies",
        "description": "Help understand how visitors interact with the website by collecting anonymous information."
      },
      "advertising": {
        "title": "Advertising Cookies",
        "description": "Used to display relevant advertisements and measure ad performance. Required for site monetization."
      }
    }
  },
  "documentation": {
    "title": "Technical Documentation",
    "subtitle": "Complete guide to understand minification and serialization with practical code examples",
    "javascript": {
      "title": "JavaScript Minification",
      "description": "Using Terser to optimize and compress JavaScript code",
      "package": {
        "title": "Package used",
        "description": "Terser is a modern JavaScript compressor that optimizes the size and performance of your code."
      },
      "basicExample": {
        "title": "Basic example",
        "input": "Input code",
        "output": "Minified code",
        "inputCode": "function calculateTotal(items) {\n  let total = 0;\n  for (let i = 0; i < items.length; i++) {\n    total += items[i].price;\n  }\n  return total;\n}\n\nconst products = [\n  { name: 'Laptop', price: 999 },\n  { name: 'Mouse', price: 25 }\n];\n\nconsole.log('Total:', calculateTotal(products));",
        "outputCode": "function calculateTotal(e){let t=0;for(let e=0;e<e.length;e++)t+=e[e].price;return t}const products=[{name:'Laptop',price:999},{name:'Mouse',price:25}];console.log('Total:',calculateTotal(products));"
      },
      "options": {
        "title": "Minification options",
        "ecmaVersion": {
          "title": "ECMAScript Version",
          "description": "Defines the target ECMAScript version for minification (ES5, ES2015, ES2017, ES2020, ES2022)",
          "examples": "Examples by ECMAScript version:",
          "example": {
            "title": "Example with ES2022",
            "code": "const data = { name: 'test' };\nconst { name } = data;\nconsole.log(name);"
          },
          "result": {
            "title": "Result",
            "code": "const{name:data}=data;console.log(data);"
          }
        },
        "compressionLevel": {
          "title": "Compression Level",
          "description": "Controls the aggressiveness of compression (conservative, normal, aggressive)",
          "examples": "Compression examples:",
          "levels": {
            "conservative": "Conservative - Minimal compression, safer",
            "normal": "Normal - Balance between size and compatibility",
            "aggressive": "Aggressive - Maximum compression, may break some code"
          }
        },
        "preserveClassNames": {
          "title": "Preserve Class Names",
          "description": "Preserves CSS class names in string literals",
          "comparison": "Comparison with/without option:",
          "originalCode": "Original code",
          "withTrue": "With preserveClassNames: true",
          "withFalse": "With preserveClassNames: false",
          "difference": "Difference",
          "differenceText": "CSS class names are preserved in strings",
          "example": {
            "title": "Example with preservation",
            "code": "element.className = 'my-class';"
          },
          "result": {
            "title": "Result",
            "code": "element.className='my-class';"
          }
        },
        "preserveFunctionNames": {
          "title": "Preserve Function Names",
          "description": "Preserves function names for debugging",
          "comparison": "Comparison with/without option:",
          "originalCode": "Original code",
          "withTrue": "With preserveFunctionNames: true",
          "withFalse": "With preserveFunctionNames: false",
          "difference": "Difference",
          "differenceText": "Function names are preserved for debugging",
          "example": {
            "title": "Example with preservation",
            "code": "function myFunction() { return true; }"
          },
          "result": {
            "title": "Result",
            "code": "function myFunction(){return!0}"
          }
        },
        "removeConsole": {
          "title": "Remove Console",
          "description": "Removes all console.log, console.warn, etc. calls",
          "comparison": "Comparison with/without option:",
          "originalCode": "Original code",
          "withTrue": "With removeConsole: true",
          "withFalse": "With removeConsole: false",
          "difference": "Difference",
          "differenceText": "All console.* calls are removed",
          "example": {
            "title": "Example with console",
            "code": "console.log('Debug info');\nreturn result;"
          },
          "result": {
            "title": "Result",
            "code": "return result;"
          }
        },
        "removeDebugger": {
          "title": "Remove Debugger",
          "description": "Removes debugger statements from code",
          "comparison": "Comparison with/without option:",
          "originalCode": "Original code",
          "withTrue": "With removeDebugger: true",
          "withFalse": "With removeDebugger: false",
          "difference": "Difference",
          "differenceText": "Debugger statements are removed",
          "example": {
            "title": "Example with debugger",
            "code": "if (condition) {\n  debugger;\n  return true;\n}"
          },
          "result": {
            "title": "Result",
            "code": "if(condition)return!0"
          }
        }
      }
    },
    "css": {
      "title": "CSS Minification",
      "description": "Using CSSO to optimize and compress CSS stylesheets",
      "package": {
        "title": "Package used",
        "description": "CSSO (CSS Optimizer) is a powerful tool for optimizing CSS files by removing redundancies and compressing code."
      },
      "basicExample": {
        "title": "Basic example",
        "input": "Input CSS",
        "output": "Minified CSS",
        "inputCode": ".container {\n  margin: 20px;\n  padding: 10px;\n  background-color: #ffffff;\n}\n\n.button {\n  color: #000000;\n  font-size: 16px;\n  border: 1px solid #cccccc;\n}",
        "outputCode": ".container{margin:20px;padding:10px;background-color:#fff}.button{color:#000;font-size:16px;border:1px solid #ccc}"
      },
      "options": {
        "title": "Minification options",
        "compressionLevel": {
          "title": "Compression Level",
          "description": "Controls the aggressiveness of CSS compression",
          "levels": {
            "conservative": "Conservative - Basic optimizations only",
            "normal": "Normal - Balance between size and compatibility",
            "aggressive": "Aggressive - Advanced optimizations, may affect compatibility"
          }
        },
        "removeComments": {
          "title": "Remove Comments",
          "description": "Removes all CSS comments from code",
          "comparison": "Comparison with/without option:",
          "originalCode": "Original code",
          "withTrue": "With removeComments: true",
          "withFalse": "With removeComments: false",
          "difference": "Difference",
          "differenceText": "CSS comments are removed",
          "example": {
            "title": "Example with comments",
            "code": "/* Header styles */\n.header {\n  color: red;\n}"
          },
          "result": {
            "title": "Result",
            "code": ".header{color:red}"
          }
        },
        "convertColors": {
          "title": "Convert Colors",
          "description": "Converts colors to their shortest format",
          "comparison": "Comparison with/without option:",
          "originalCode": "Original code",
          "withTrue": "With convertColors: true",
          "withFalse": "With convertColors: false",
          "difference": "Difference",
          "differenceText": "Colors are converted to shortest format",
          "example": {
            "title": "Example with colors",
            "code": ".element {\n  color: #ffffff;\n  background: rgb(255, 0, 0);\n}"
          },
          "result": {
            "title": "Result",
            "code": ".element{color:#fff;background:red}"
          }
        },
        "mergeRules": {
          "title": "Merge Rules",
          "description": "Merges identical and adjacent CSS rules",
          "comparison": "Comparison with/without option:",
          "originalCode": "Original code",
          "withTrue": "With mergeRules: true",
          "withFalse": "With mergeRules: false",
          "difference": "Difference",
          "differenceText": "Identical CSS rules are merged",
          "example": {
            "title": "Example with merging",
            "code": "p { color: red; }\np { font-size: 16px; }"
          },
          "result": {
            "title": "Result",
            "code": "p{color:red;font-size:16px}"
          }
        },
        "minifySelectors": {
          "title": "Minify Selectors",
          "description": "Optimizes CSS selectors to reduce their size",
          "comparison": "Comparison with/without option:",
          "originalCode": "Original code",
          "withTrue": "With minifySelectors: true",
          "withFalse": "With minifySelectors: false",
          "difference": "Difference",
          "differenceText": "CSS selectors are optimized",
          "example": {
            "title": "Example with selectors",
            "code": ".my-class { color: blue; }"
          },
          "result": {
            "title": "Result",
            "code": ".my-class{color:blue}"
          }
        }
      }
    },
    "json": {
      "title": "JSON Minification",
      "description": "Compressing JSON files by removing spaces and unnecessary characters",
      "basicExample": {
        "title": "Basic example",
        "input": "Input JSON",
        "output": "Minified JSON",
        "inputCode": "{\n  \"name\": \"FastMinify\",\n  \"version\": \"1.0.0\",\n  \"description\": \"A fast minifier tool\",\n  \"features\": [\n    \"JavaScript minification\",\n    \"CSS optimization\",\n    \"JSON compression\"\n  ]\n}",
        "outputCode": "{\"name\":\"FastMinify\",\"version\":\"1.0.0\",\"description\":\"A fast minifier tool\",\"features\":[\"JavaScript minification\",\"CSS optimization\",\"JSON compression\"]}"
      },
      "options": {
        "title": "Minification options",
        "compressionLevel": {
          "title": "Compression Level",
          "description": "Controls the aggressiveness of JSON compression",
          "levels": {
            "conservative": "Conservative - Whitespace removal only",
            "normal": "Normal - Basic optimizations",
            "aggressive": "Aggressive - Advanced optimizations and cleanup"
          }
        },
        "optimizeNumbers": {
          "title": "Optimize Numbers",
          "description": "Optimizes number representation (removes unnecessary zeros)",
          "comparison": "Comparison with/without option:",
          "originalCode": "Original code",
          "withTrue": "With optimizeNumbers: true",
          "withFalse": "With optimizeNumbers: false",
          "difference": "Difference",
          "differenceText": "Numbers are optimized (unnecessary zeros removed)",
          "example": {
            "title": "Example with numbers",
            "code": "{\n  \"price\": 10.00,\n  \"count\": 0\n}"
          },
          "result": {
            "title": "Result",
            "code": "{\"price\":10,\"count\":0}"
          }
        },
        "removeNullValues": {
          "title": "Remove Null Values",
          "description": "Removes properties with null values",
          "comparison": "Comparison with/without option:",
          "originalCode": "Original code",
          "withTrue": "With removeNullValues: true",
          "withFalse": "With removeNullValues: false",
          "difference": "Difference",
          "differenceText": "Properties with null values are removed",
          "example": {
            "title": "Example with null",
            "code": "{\n  \"name\": \"test\",\n  \"value\": null\n}"
          },
          "result": {
            "title": "Result",
            "code": "{\"name\":\"test\"}"
          }
        },
        "removeEmptyArrays": {
          "title": "Remove Empty Arrays",
          "description": "Removes empty arrays from JSON",
          "comparison": "Comparison with/without option:",
          "originalCode": "Original code",
          "withTrue": "With removeEmptyArrays: true",
          "withFalse": "With removeEmptyArrays: false",
          "difference": "Difference",
          "differenceText": "Empty arrays are removed",
          "example": {
            "title": "Example with empty arrays",
            "code": "{\n  \"items\": [],\n  \"name\": \"test\"\n}"
          },
          "result": {
            "title": "Result",
            "code": "{\"name\":\"test\"}"
          }
        },
        "sortObjectKeys": {
          "title": "Sort Object Keys",
          "description": "Sorts object keys alphabetically",
          "comparison": "Comparison with/without option:",
          "originalCode": "Original code",
          "withTrue": "With sortObjectKeys: true",
          "withFalse": "With sortObjectKeys: false",
          "difference": "Difference",
          "differenceText": "Object keys are sorted alphabetically",
          "example": {
            "title": "Example with sorting",
            "code": "{\n  \"zebra\": 1,\n  \"apple\": 2,\n  \"banana\": 3\n}"
          },
          "result": {
            "title": "Result",
            "code": "{\"apple\":2,\"banana\":3,\"zebra\":1}"
          }
        }
      }
    },
    "php": {
      "title": "PHP Serialize",
      "description": "Using PHP's serialize() function to convert data into compact binary format",
      "basicExample": {
        "title": "Basic example",
        "input": "Input PHP code",
        "output": "Serialized data",
        "inputCode": "<?php\n$data = [\n  'name' => 'FastMinify',\n  'version' => '1.0.0',\n  'features' => ['minify', 'compress', 'optimize']\n];\n\n$serialized = serialize($data);\necho $serialized;",
        "outputCode": "a:3:{s:4:\"name\";s:10:\"FastMinify\";s:7:\"version\";s:5:\"1.0.0\";s:8:\"features\";a:3:{i:0;s:5:\"minify\";i:1;s:8:\"compress\";i:2;s:8:\"optimize\";}}"
      },
      "options": {
        "title": "Serialization options",
        "includeNullValues": {
          "title": "Include Null Values",
          "description": "Includes properties with null values in serialization",
          "comparison": "Comparison with/without option:",
          "originalCode": "Original code",
          "withTrue": "With includeNullValues: true",
          "withFalse": "With includeNullValues: false",
          "difference": "Difference",
          "differenceText": "Properties with null values are included in serialization",
          "example": {
            "title": "Example with null",
            "code": "<?php\n$data = [\n  'name' => 'test',\n  'value' => null\n];\n$serialized = serialize($data);"
          },
          "result": {
            "title": "Result",
            "code": "a:2:{s:4:\"name\";s:4:\"test\";s:5:\"value\";N;}"
          }
        },
        "removeEmptyArrays": {
          "title": "Remove Empty Arrays",
          "description": "Removes empty arrays before serialization",
          "comparison": "Comparison with/without option:",
          "originalCode": "Original code",
          "withTrue": "With removeEmptyArrays: true",
          "withFalse": "With removeEmptyArrays: false",
          "difference": "Difference",
          "differenceText": "Empty arrays are removed before serialization",
          "example": {
            "title": "Example with empty arrays",
            "code": "<?php\n$data = [\n  'items' => [],\n  'name' => 'test'\n];\n$serialized = serialize($data);"
          },
          "result": {
            "title": "Result",
            "code": "a:1:{s:4:\"name\";s:4:\"test\";}"
          }
        },
        "removeEmptyObjects": {
          "title": "Remove Empty Objects",
          "description": "Removes empty objects before serialization",
          "comparison": "Comparison with/without option:",
          "originalCode": "Original code",
          "withTrue": "With removeEmptyObjects: true",
          "withFalse": "With removeEmptyObjects: false",
          "difference": "Difference",
          "differenceText": "Empty objects are removed before serialization",
          "example": {
            "title": "Example with empty objects",
            "code": "<?php\n$data = [\n  'config' => (object)[],\n  'name' => 'test'\n];\n$serialized = serialize($data);"
          },
          "result": {
            "title": "Result",
            "code": "a:1:{s:4:\"name\";s:4:\"test\";}"
          }
        },
        "sortKeys": {
          "title": "Sort Keys",
          "description": "Sorts associative array keys alphabetically",
          "comparison": "Comparison with/without option:",
          "originalCode": "Original code",
          "withTrue": "With sortKeys: true",
          "withFalse": "With sortKeys: false",
          "difference": "Difference",
          "differenceText": "Array keys are sorted alphabetically",
          "example": {
            "title": "Example with sorting",
            "code": "<?php\n$data = [\n  'zebra' => 1,\n  'apple' => 2,\n  'banana' => 3\n];\n$serialized = serialize($data);"
          },
          "result": {
            "title": "Result",
            "code": "a:3:{s:5:\"apple\";i:2;s:6:\"banana\";i:3;s:5:\"zebra\";i:1;}"
          }
        }
      }
    }
  }
}
